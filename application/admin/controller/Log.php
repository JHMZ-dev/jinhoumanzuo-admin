<?php
namespace app\admin\controller;

use app\common\model\VyangAdminPush;
use think\Db;
use think\Request;
use app\admin\model\Common as adminModelCommon;

/**
 * 日志
 * Class Log
 * @package app\admin\controller
 */
class Log extends Common
{
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中
        $this->assign('active','14');
    }
    /**
     * 页面
     * @return mixed
     */
    public function log()
    {
        // 查询数据 并且每页显示10条数据
        $cont    = $this->request->get('cont');
        $lei    = $this->request->get('lei',0);

        $map    = [];
        $map['controller'] = ['eq', "User"];
        switch ($lei)
        {
            case 1:
                $map['action'] = ['eq', "user_all_add_edit"];
                break;
            case 2:
                $map['action'] = ['eq', "user_all_del_edit"];
                break;
            case 3:
                $map['action'] = ['eq', "update_daren"];
                break;
            case 4:
                $map['action'] = ['eq', "update_daren_di"];
                break;
            case 5:
                $map['action'] = ['eq', "shiming"];
                break;
            case 6:
                $map['action'] = ['eq', "user_gaihaoma"];
                break;
            case 7:
                $map['action'] = ['eq', "open_vip"];
                break;
            default:
                $map['action'] = ['in', ['user_all_add_edit','user_all_del_edit','update_daren','update_daren_di','shiming','user_gaihaoma','open_vip']];
                break;
        }
        $page = '';
        if(!empty($cont))
        {
            $map['datas'] = ['like', "%$cont%"];
        }
        $list   = PageSeach('admin_viewlogs', $map,[], 'admin_viewlogs_id desc', '10', false, Request::instance()->param());
        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {
                $list[$k]['time']            = replaceTime($v['time']);
                $list[$k]['cont']            = '';
                if($v['controller'] == 'User')
                {
                    if($v['action'] == 'user_all_add_edit')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            switch ($re['type'])
                            {
                                case 1:
                                    $name = Db::name('task_pack')->where('task_pack_id',$re['desc'])->value('name');
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'增加了：'.$re['num'].'个的'.$name;
                                    break;
                                case 2:
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'增加了'.$re['num'].'个影票'.' 原因是：'.$re['desc'];
                                    break;
                                case 3:
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'增加了'.$re['num'].'个通证'.' 原因是：'.$re['desc'];
                                    break;
                                case 4:
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'增加了'.$re['num'].'个扑满'.' 原因是：'.$re['desc'];
                                    break;
                                default:
                                    $list[$k]['cont']  = '执行内容为空';
                                    break;
                            }
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                    if($v['action'] == 'user_all_del_edit')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            switch ($re['type'])
                            {
                                case 1:
                                    $name = Db::name('task_pack')->where('task_pack_id',$re['desc'])->value('name');
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'减少了：'.$re['num'].'个的'.$name;
                                    break;
                                case 2:
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'减少了'.$re['num'].'个影票'.' 原因是：'.$re['desc'];
                                    break;
                                case 3:
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'减少了'.$re['num'].'个通证'.' 原因是：'.$re['desc'];
                                    break;
                                case 4:
                                    $list[$k]['cont']  = '为用户'.$re['cont'].'减少了'.$re['num'].'个扑满'.' 原因是：'.$re['desc'];
                                    break;
                                default:
                                    $list[$k]['cont']  = '执行内容为空';
                                    break;
                            }
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                    if($v['action'] == 'update_daren')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            $list[$k]['cont']            = '把用户：'.$re['user_id'].'升级了一次团队等级';
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                    if($v['action'] == 'update_daren_di')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            $list[$k]['cont']            = '把用户：'.$re['user_id'].'降低了一次团队等级';
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                    if($v['action'] == 'shiming')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            $list[$k]['cont']            = '把用户：'.$re['user_id'].'设置为已实名';
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                    if($v['action'] == 'user_gaihaoma')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            $list[$k]['cont']            = '把手机号：'.$re['mobile'].' 更换成了：'.$re['mobile2'];
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                    if($v['action'] == 'open_vip')
                    {
                        $re = json_decode($v['datas'],true);
                        if(!empty($re))
                        {
                            if(isset($re['type']))
                            {
                                if($re['type'] == 1)
                                {
                                    $tt = '开通';
                                }else{
                                    $tt = '关闭';
                                }
                            }else{
                                $tt = '开通';
                            }
                            $list[$k]['cont']            = '为用户：'.$re['user_id'].$tt.'一个月会员';
                        }else{
                            $list[$k]['cont']            = '执行内容为空';
                        }
                    }
                }
            }
        }
        if(!empty($list))
        {
            $list = _xss($list);
        }
        // 把分页数据赋值给模板变量list
        $this->assign('order',$list);
        $this->assign('show',$page);
        // 渲染模板输出

        return $this->fetch();
    }
}
