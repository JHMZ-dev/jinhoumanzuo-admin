<?php
namespace app\admin\controller;

use app\admin\controller\Common;

use app\common\model\VyangAdminPush;
use OSS\Core\OssException;
use think\Db;
use think\Request;
use think\Loader;


/**
 *  扑满管理
 * Class Puman
 * @package app\admin\controller
 */
class Puman extends Common
{
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中
        $this->assign('active','17');
    }

    /**
     * 地址列表
     * @return mixed
     */
    public function puman_address_list()
    {
        // 查询数据 并且每页显示10条数据
        $cont    = $this->request->get('cont');
        $type       = $this->request->get('type');
        $status     = $this->request->get('status');
        $lei     = $this->request->get('lei');

        $map    = [];
        $page = '';

        if(!empty($cont))
        {
            $cont_type    = $this->request->get('cont_type');
            if($cont_type == 1)
            {
                $map['u_address_id']       = ['eq', $cont];
            }
            if($cont_type == 3)
            {
                $map['address']       = ['eq', $cont];
            }
        }

        $list   = PageSeach('pm_u_address', $map,[], 'u_address_id desc', '1000', false, Request::instance()->param());

        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {

                if(!empty($v['time']))
                {
                    $list[$k]['time']        = replaceTime($v['time']);
                }else{
                    $list[$k]['time']        = '';
                }
            }
        }
        if(!empty($list))
        {
            $list = _xss($list);
        }
        // 把分页数据赋值给模板变量list
        $this->assign('order',$list);
        $this->assign('show',$page);
        // 渲染模板输出

        return $this->fetch();
    }

    //地址添加扑满显示
    public function puman_address_add(){

        return $this->fetch();
    }

    //地址添加扑满提交
    public function puman_address_add_sub(){
        $address    = $this->request->post('address');
        $type    = $this->request->post('type');

        if($type){
            $type = 1;
        }else{
            $type = 0;
        }

        if(empty($address))
        {
            ajaxError('请填写地址!');
        }
        $data = [
            'address'   => $address,
            'type'   => $type,
            'time'   => time(),
        ];
        $res = Db::name('pm_u_address')->insert($data);
        caozuo($res);
    }

    //地址改状态
    public function puman_address_zt_sub2(){
        $id    = $this->request->post('id2');
        $val    = $this->request->post('val2');

        if(empty($id))
        {
            ajaxError('请选择地址!');
        }

        if($val){
            $val = 1;
        }else{
            $val = 0;
        }

        $data = [
            'type'   => $val,
        ];

        $res = Db::name('pm_u_address')->where('u_address_id',$id)->update($data);
        if($res){
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败!');
        }
    }

    //删除
    public function puman_address_del(){
        $id    = $this->request->post('id');

        if(empty($id))
        {
            ajaxError('请选择地址!');
        }

        $res = Db::name('pm_u_address')->where('u_address_id',$id)->delete();
        if($res){
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败!');
        }
    }



    /**
     * 储备列表
     * @return mixed
     */
    public function puman_hash_list()
    {
        // 查询数据 并且每页显示10条数据
        $cont    = $this->request->get('cont');
        $type       = $this->request->get('type');
        $map    = [];
        $page = '';

        if(!empty($cont))
        {
            $cont_type    = $this->request->get('cont_type');
            if($cont_type == 1)
            {
                $map['user_id']       = ['eq', $cont];
            }
            if($cont_type == 2)
            {
                $map['to_address']       = ['eq', $cont];
            }
            if($cont_type == 3)
            {
                $map['user_address']       = ['eq', $cont];
            }
        }

        $list   = PageSeach('pm_cb', $map,[], 'pm_cb_id desc', '1000', false, Request::instance()->param());

        if(!empty($list))
        {
            $tt = [0 => '待确认', 1 => '后台审核中', 2 => '成功', 3 => '已取消'];
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {
                $list[$k]['statuss']        = $tt[$v['status']];
                if(!empty($v['time']))
                {
                    $list[$k]['time']        = replaceTime($v['time']);
                }else{
                    $list[$k]['time']        = '';
                }
                if(!empty($v['use_time']))
                {
                    $list[$k]['use_time']        = replaceTime($v['use_time']);
                }else{
                    $list[$k]['use_time']        = '';
                }
            }
        }
        if(!empty($list))
        {
            $list = _xss($list);
        }
        // 把分页数据赋值给模板变量list
        $this->assign('order',$list);
        $this->assign('show',$page);
        // 渲染模板输出

        return $this->fetch();
    }

    public function puman_hash_edit()
    {
        $id    = $this->request->post('id');
        if(empty($id))
        {
            ajaxError('请选择订单!');
        }
        $resss = Db::name('pm_cb')->where('pm_cb_id',$id)->find();
        if(!$resss)
        {
            ajaxError('找不到该订单!');
        }
        $type = $this->request->post('type');
        if($type == 1)
        {
            if($resss['status'] == 0)
            {
                ajaxError('该订单待确认!');
            }
            if($resss['status'] == 2)
            {
                ajaxError('该订单已完成!');
            }
            if($resss['status'] == 3)
            {
                ajaxError('该订单已取消!');
            }
            $update = ['status' => 2,'use_time' => time()];
        }else{
            if($resss['status'] == 2)
            {
                ajaxError('该订单已完成!');
            }
            if($resss['status'] == 3)
            {
                ajaxError('该订单已取消!');
            }
            $update = ['status' => 3,'use_time' => time()];
        }
        $rr = Db::name('pm_cb')->where('pm_cb_id',$id)->update($update);
        if($rr)
        {
            if($type == 1)
            {
                //增加币
                $info =[
                    'user_id'   => $resss['user_id'],
                    'num'       => $resss['puman'],
                    'desc'      => '扑满储备成功',
                    'type'      => 4,
                    'key'       => config('key'),    //key
                ];
                $url = 'http://127.0.0.1:9510/system/add_gold_integral_dian';
                VyangAdminPush::https_post($url, $info);
            }
            jsonError('200','操作成功');
        }else{
            jsonError('10001','操作失败，请稍后重试');
        }
    }

    //hash添加扑满显示
    public function puman_hash_add(){

        return $this->fetch();
    }

    //hash添加扑满提交
    public function puman_hash_add_sub(){
        $hash   = $this->request->post('hash');
        $puman    = $this->request->post('puman');

        if(empty($hash))
        {
            ajaxError('请填写hash!');
        }
        if(empty($puman))
        {
            ajaxError('请填写扑满!');
        }

        $re = Db::name('pm_u_dh')->where('hash',$hash)->find();
        if(!empty($re)){
            ajaxError('不能重复添加该hash!');
        }

        $data = [
            'hash'   => $hash,
            'puman'   => $puman,
            'time'   => time(),
        ];
        $res = Db::name('pm_u_dh')->insert($data);
        caozuo($res);
    }

    //删除
    public function puman_hash_del(){
        $id    = $this->request->post('id');

        if(empty($id))
        {
            ajaxError('请选择地址!');
        }

        $res = Db::name('pm_u_dh')->where('u_dh_id',$id)->delete();
        if($res){
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败!');
        }
    }

    //扑满赎回列表
    public function puman_shuhui_list(){
        // 查询数据 并且每页显示10条数据
        $cont    = $this->request->get('cont');
        $type       = $this->request->get('type');
        $status     = $this->request->get('status');
        $lei     = $this->request->get('lei');

        $map    = [];
        $page = '';

        $begintime     = $this->request->get('begintime',0);
        //申请时间 $begintime 2020-04-22 时间字符串
        if(!empty($begintime)){
            $time = strtotime($begintime);//开始时间
            $end_time = strtotime(date('Y-m-d 23:59:59',strtotime($begintime)));//结束时间
            $map['time']      = ['between', [$time,$end_time]];
        }

        if(!empty($cont))
        {
            $cont_type    = $this->request->get('cont_type');
            if($cont_type == 1)
            {
                $map['sh_id']       = ['eq', $cont];
            }
            if($cont_type == 2)
            {
                $map['user_id']       = ['eq', $cont];
            }
            if($cont_type == 3)
            {
                $map['usdt_address']       = ['eq', $cont];
            }
        }

        $list   = PageSeach('pm_sh', $map,[], 'sh_id desc', '1000', false, Request::instance()->param());

        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {
                if(!empty($v['time']))
                {
                    $list[$k]['time']        = replaceTime($v['time']);
                }else{
                    $list[$k]['time']        = '';
                }
            }
        }

        if(!empty($list))
        {
            $list = _xss($list);
        }

        // 把分页数据赋值给模板变量list
        $this->assign('order',$list);
        $this->assign('show',$page);
        // 渲染模板输出

        return $this->fetch();
    }

    //通过拒绝
    public function puman_shuhui_sub(){
        $id = $this->request->post('id');
        $type = $this->request->post('type');
        $cont = $this->request->post('cont');
        if ($type == 1) {
            $update = ['type' => 1];
            $res = Db::name('pm_sh')->where('sh_id', $id)->update($update);
            if ($res) {
                ajaxSuccess('操作成功');
            } else {
                ajaxError('操作失败,请重试');
            }
        } else {
            if(empty($cont)){
                ajaxError('拒绝请填写原因');
            }
            $update = ['type' => 2,'cont' =>$cont];
            $res = Db::name('pm_sh')->where('sh_id', $id)->update($update);
            if ($res) {
                $info =[     'id'    => $id,
                    'type'  => 2,   //1通证回收退回 2扑满赎回退回
                    'key'   => config('key')
                ];
                $url = 'http://127.0.0.1:9510/system/tuihui_all';
                VyangAdminPush::https_post($url, $info);
                ajaxSuccess('操作成功');
            } else {
                ajaxError('操作失败,请重试');
            }
        }

    }

    /**
     * 赎回导出
     * @return null
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \PHPExcel_Writer_Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function out_sh_list(){
        $piostdata = $this->request->post('arr/a',0);
        $path = '/filexlsx/'.md5(time().rand(100000,999999)).'.xlsx';
        $name = '列表';
        $title = [
            '序号',
            '用户ID',
            '地址',
            '份额数量',
            '类型',
            '原因',
            '手续费',
            '时间',
        ];
        $url = 'http://'.$_SERVER['HTTP_HOST'].$path;
        $d = [];
        //查询
        $where['sh_id'] = ['in',implode(',',$piostdata)];
        $order_data = Db::name('pm_sh')->where($where)->select();

        foreach ($order_data as $k => $v)
        {
            $d[$k]['序号'] = $v['sh_id'];
            $d[$k]['用户ID'] = $v['user_id'];
            $d[$k]['地址'] = $v['usdt_address']?$v['usdt_address']:'暂无';
            $d[$k]['份额数量'] = $v['puman'];

            if($v['type'] == 0){
                $v['type'] = '审核中';
            }
            if($v['type'] == 1){
                $v['type'] = '成功';
            }
            if($v['type'] == 2){
                $v['type'] = '失败';
            }
            $d[$k]['类型'] = $v['type'];

            $d[$k]['原因'] = $v['cont'];
            $d[$k]['手续费'] = $v['shouxu'];
            $d[$k]['时间'] = replaceTime($v['time']);
        }

        $data = $d;
        $odata = wps($name,$title,$data,ROOT_PATH.'/public'.$path);

        if($odata){
            //return jsonSuccess(200,"<a href='". $url ."'>点击立即下载</a>  ".$url,['url' =>$url ]);
            return jsonSuccess(200,"<a href='". $url ."'>点击立即下载</a>  ");
        }else{
            return jsonError(500,'当前人数太多，处理失败，请稍后再试','');
        }
    }

    /**
     * 储备导出
     * @return null
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \PHPExcel_Writer_Exception
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function out_cb_list(){
        $piostdata = $this->request->post('arr/a',0);
        $path = '/filexlsx/'.md5(time().rand(100000,999999)).'.xlsx';
        $name = '列表';
        $title = [
            '序号',
            '用户ID',
            '用户地址',
            '到账地址',
            '数量',
            '类型',
            '时间',
            '使用时间',
            '交易hash',
        ];
        $url = 'http://'.$_SERVER['HTTP_HOST'].$path;
        $d = [];
        //查询
        $where['pm_cb_id'] = ['in',implode(',',$piostdata)];
        $order_data = Db::name('pm_cb')->where($where)->select();

        foreach ($order_data as $k => $v)
        {
            $d[$k]['序号'] = $v['pm_cb_id'];
            $d[$k]['用户ID'] = $v['user_id'];
            $d[$k]['用户地址'] = $v['user_address']?$v['user_address']:'暂无';
            $d[$k]['到账地址'] = $v['to_address']?$v['to_address']:'暂无';
            $d[$k]['数量'] = $v['puman'];
            if($v['status'] == 0){
                $v['status'] = '待确认';
            }
            if($v['status'] == 1){
                $v['status'] = '后台审核中';
            }
            if($v['status'] == 2){
                $v['status'] = '成功';
            }
            if($v['status'] == 3){
                $v['status'] = '已取消';
            }

            $d[$k]['类型'] = $v['status'];
            $d[$k]['时间'] = replaceTime($v['time']);
            $d[$k]['使用时间'] = $v['use_time']>0?replaceTime($v['use_time']):'0';
        }

        $data = $d;
        $odata = wps($name,$title,$data,ROOT_PATH.'/public'.$path);

        if($odata){
            //return jsonSuccess(200,"<a href='". $url ."'>点击立即下载</a>  ".$url,['url' =>$url ]);
            return jsonSuccess(200,"<a href='". $url ."'>点击立即下载</a>  ");
        }else{
            return jsonError(500,'当前人数太多，处理失败，请稍后再试','');
        }
    }

}

