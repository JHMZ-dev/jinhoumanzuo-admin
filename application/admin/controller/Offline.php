<?php
namespace app\admin\controller;

use app\admin\controller\Common;

use app\common\model\VyangAdminPush;
use OSS\Core\OssException;
use think\Db;
use think\Request;
use think\Loader;


/**
 *
 *
 * @package app\admin\controller
 */
class Offline extends Common
{
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中
        $this->assign('active','18');
    }



    /**
     * 列表
     * @return mixed
     */
    public function offline_list()
    {
        // 查询数据 并且每页显示10条数据
        $cont    = $this->request->get('cont');
        $type       = $this->request->get('type');
        $status     = $this->request->get('status');
        $lei     = $this->request->get('lei');

        $map    = [];
        $page = '';

        if(!empty($cont))
        {
            $cont_type    = $this->request->get('cont_type');
            if($cont_type == 1)
            {
                $map['offline_id']       = ['eq', $cont];
            }
            if($cont_type == 2)
            {
                $map['user_id']       = ['eq', $cont];
            }
        }

        $list   = PageSeach('offline', $map,[], 'offline_id desc', '10', false, Request::instance()->param());

        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {
                $list2 = '';
                if($v['img']){
                    $list2 = explode(',',$v['img']);
                }
                $list[$k]['img'] = $list2[0];
                if(!empty($v['offline_in_time']))
                {
                    $list[$k]['offline_in_time']        = replaceTime($v['offline_in_time']);
                }else{
                    $list[$k]['offline_in_time']        = '';
                }
                if(!empty($v['offline_end_time']))
                {
                    $list[$k]['offline_end_time']        = replaceTime($v['offline_end_time']);
                }else{
                    $list[$k]['offline_end_time']        = '';
                }
                $list[$k]['address'] = '';
                if($v['address']){
                    $list[$k]['address']  = mb_substr($v['address'],0,6).'...';
                }
                $list[$k]['address_detailed'] = '';
                if($v['address_detailed']){
                    $list[$k]['address_detailed']  = mb_substr($v['address_detailed'],0,6).'...';
                }
            }
        }

        if(!empty($list))
        {
            $list = _xss($list);
        }

        // 把分页数据赋值给模板变量list
        $this->assign('order',$list);
        $this->assign('show',$page);
        // 渲染模板输出

        return $this->fetch();
    }

    //详细
    public function offline_data(){
        $id = $this->request->param('id');

        $res = Db::name('offline')->where('offline_id', $id)->find();
        if (empty($res)) {
            $this->error('商家不存在');
        }
        $data = [
            'offline_id' => $res['offline_id'],
            'img' => $res['img'],
            'user_id' => $res['user_id'],
            'name' => $res['name'],
            'address' => $res['address'],
            'address_detailed' => $res['address_detailed'],
            'longitude' => $res['longitude'],
            'latitude' => $res['latitude'],
            'introduction' => $res['introduction'],
            'offline_in_time' => replaceTime($res['offline_in_time']),
            'offline_end_time' => replaceTime($res['offline_end_time']),
            'offline_status' => $res['offline_status'],
            'mobile' => $res['mobile'],
            'price' => $res['price'],
        ];
        $data = _xss($data);
        $data['img'] = explode(',',$res['img']);
        $this->assign('info', $data);

        return $this->fetch();
    }

    //审核
    public function offline_data_sub(){
        $offline_id = $this->request->post('offline_id',0);
        $offline_status = $this->request->post('offline_status','');
        $offline_content = $this->request->post('offline_content','');

        $update = [];

        $r =  Db::name('offline')->where('offline_id',$offline_id)->find();
        if(empty($r)){
            ajaxError('没有该商家');
        }

        if(empty($offline_status)){
            ajaxError('请选择审核状态');
        }
        if($offline_status == '3'){
            if(empty($offline_content)){
                ajaxError('请填写驳回原因');
            }
            $update['offline_content'] = $offline_content;
            $update['shenhe_time'] = time();
        }

        $update['offline_status'] = $offline_status;

        $res =  Db::name('offline')->where('offline_id',$offline_id)->update($update);
        if($res)
        {
            if($offline_status == '3'){
                //退钱
                //整理人
                $info =[
                    'user_id'   => $r['user_id'],
                    'num'       => $r['price'],
                    'desc'      => '商家驳回退回',
                    'type'      => '3',
                    'key'       => config('key'),    //key
                ];
                $url = 'http://127.0.0.1:9510/system/add_gold_integral_dian';
                VyangAdminPush::https_post($url, $info);
            }
            ajaxSuccess('操作成功');
        }else{
            ajaxError('修改失败');
        }
    }

    //强制下线
    public function offline_xiaxian_sub(){
        $offline_id = $this->request->post('id',0);

        $r =  Db::name('offline')->where('offline_id',$offline_id)->find();
        if(empty($r)){
            ajaxError('没有该商家');
        }

        if($r['offline_status'] == '0'){
            $update = [
                'offline_status' => 1,
            ];
        }else{
            $update = [
                'offline_status' => 0,
            ];
        }

        $res = Db::name('offline')->where('offline_id',$offline_id)->update($update);
        if($res){
            ajaxSuccess('成功');
        }else{
            ajaxError('操作失败');
        }
    }


    /**
     * 列表
     * @return mixed
     */
    public function bangbang_list()
    {
        // 查询数据 并且每页显示10条数据
        $cont    = $this->request->get('cont');
        $type       = $this->request->get('type');
        $status     = $this->request->get('status');
        $lei     = $this->request->get('lei');

        $map    = [];
        $page = '';

        if(!empty($cont))
        {
            $cont_type    = $this->request->get('cont_type');
            if($cont_type == 1)
            {
                $map['bangbang_id']       = ['eq', $cont];
            }
            if($cont_type == 2)
            {
                $map['user_id']       = ['eq', $cont];
            }
        }

        $list   = PageSeach('offline_bangbang', $map,[], 'bangbang_id desc', '10', false, Request::instance()->param());

        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {
                $list[$k]['time'] = '';
                if($v['time']){
                    $list[$k]['time']  = replaceTime($v['time']);
                }
            }
        }

        if(!empty($list))
        {
            $list = _xss($list);
        }

        // 把分页数据赋值给模板变量list
        $this->assign('order',$list);
        $this->assign('show',$page);
        // 渲染模板输出

        return $this->fetch();
    }

    public function bangbang_delete(){
        $id = $this->request->post('id',0);

        $r =  Db::name('offline_bangbang')->where('bangbang_id',$id)->find();
        if(empty($r)){
            ajaxError('没有该id');
        }

        $res = Db::name('offline_bangbang')->where('bangbang_id',$id)->delete();
        if($res){
            ajaxSuccess('成功');
        }else{
            ajaxError('操作失败');
        }
    }

    public function add_bangbang(){
        return $this->fetch();
    }

    public function add_bangbang_sub(){
        $user_id = $this->request->post('user_id',0);
        $nickname = $this->request->post('nickname',0);
        if (empty($user_id) || empty($nickname)){
            ajaxError('不能空id、昵称');
        }

        $r = Db::name('offline_bangbang')->where('user_id',$user_id)->find();
        if(!empty($r)){
            ajaxError('已经有该用户了');
        }

        $res = Db::name('offline_bangbang')->insert([
            'user_id' => $user_id,
            'nickname' => $nickname,
            'time' => time(),
        ]);
        if(empty($res)){
            ajaxError('当前人数较多，请稍后再试');
        }

        ajaxSuccess('操作成功');
    }

    public function editdata(){
        $id = $this->request->post('id',0);
        $key = $this->request->post('key',0);
        $val = $this->request->post('val',0);

        if(empty($id) || empty($id) || empty($id)){
            ajaxError('请选择参数');
        }
        if($key == 'nickname'){
            $data['nickname'] = $val;
        }

        $res = Db::name('offline_bangbang')->where('bangbang_id',$id)->update($data);
        if($res){
            ajaxSuccess('ok');
        }else{
            ajaxError('当前人数较多，请稍后再试');
        }
    }

}

