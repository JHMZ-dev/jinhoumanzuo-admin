<?php
namespace app\admin\controller;

use app\common\model\VyangAdminPush;
use think\Db;
use think\Request;

/**
 * 矿机
 * Class TaskBao
 * @package app\admin\controller
 */
class TaskBao extends Common
{
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中
        $this->assign('active','10');
    }

    /**
     * 主页
     */
    public function index()
    {
        $name     = $this->request->get('name','');
        $page = '';
        $map = [];
        if(!empty($name))
        {
            $map['name'] = ['like', "%$name%"];
        }
        $list = PageSeach2('ds_task_pack', $map,[], 'paixu asc', 10, false, Request::instance()->param());
        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
        }

        // 渲染模板输出
        $this->assign('show',$page);
        $this->assign('list',$list);
        return $this->fetch();
    }
    public function task_bao_add()
    {
        return $this->fetch();
    }
    //处理添加
    public function task_bao_add_edit()
    {
        $status = $this->request->post('status',1);
        $num    = $this->request->post('num',99);
        $day    = $this->request->post('day');
        $get    = $this->request->post('get');
        $name   = $this->request->post('name');
        $need   = $this->request->post('need');
        if(empty($name))
        {
            ajaxError('请填写矿机名称');
        }
        if($day < 1)
        {
            ajaxError('请填写任务天数');
        }
        if($need <= 0)
        {
            ajaxError('请填写需要的beel数量');
        }
        if($get <= 0)
        {
            ajaxError('请填写获得的beel数量');
        }
        $data = [
            'name'  => $name,
            'need'  => $need,
            'get'   => $get,
            'day'   => $day,
            'status'=> $status,
            'num'   => $num,
        ];
        $res = Db::table('ds_task_pack')->insert($data);
        caozuo($res);
    }
    public function task_bao_zd_edit()
    {
        $id     = $this->request->post('id');
        $type   = $this->request->post('type');
        $name   = $this->request->post('name');
        $val    = $this->request->post('val');
        if(!empty($id) && !empty($type))
        {
            if($type == 'edit')
            {
                //编辑修改
                if(!empty($name))
                {
                    $data = [
                        $name => $val
                    ];
                    $res = Db::table('ds_task_pack')->where('task_pack_id',$id)->update($data);
                }else{
                    jsonError('10001','缺少修改内容');
                }
            }else{
                //删除
                $res = Db::table('ds_task_pack')->where('task_pack_id',$id)->delete();
            }
            //返回结果
            caozuo($res);
        }
    }


    //批量手动处理
    public function bao_listEdit()
    {
        $arr    = $this->request->post('arr/a');
        $caozuo = $this->request->post('caozuo');
        $cont   = $this->request->post('cont');
        $time = time();
        if($caozuo == 'yes')
        {
            $where['user_goko_id'] = ['in', implode(',', $arr)];
            $update           = [
                'status'     => 2,
                'cont'       => '已完成',
                'chuli_time' => $time,
            ];
            $res = Db::table('user_goko')->where($where)->update($update);
            if($res)
            {
                jsonSuccess('200','成功处理');
            }else{
                jsonSuccess('10001','处理错误');
            }
        }else{
            if(empty($cont))
            {
                jsonError('10001','请输入取消理由');
            }
            $update           = [
                'status'      => 3,
                'cont'       => $cont,
                'chuli_time' => $time,
            ];
            //批量拒绝
            $url = 'http://127.0.0.1:9510/system/add_gold_integral_dian';
            $desc = '兑换退回';
            //增加积分
            $info = [
                'type' => 4,    //1增加金币 2增加积分 3增加标点
                'desc' => $desc,    //描述
                'key'  => config('key'),    //key
            ];
            $ci = 0;
            foreach ($arr as $v)
            {
                $ksd = Db::table('user_goko')->where('user_goko_id',$v)->field('user_id,num,shouxu')->find();
                if($ksd)
                {
                    //修改
                    $gai = Db::table('user_goko')->where('user_goko_id',$v)->update($update);
                    if($gai)
                    {
                        $ci += 1;
                        //退回金币
                        $info['user_id'] = $ksd['user_id'];
                        $info['num'] = $ksd['num']+$ksd['shouxu'];
                        $ress = VyangAdminPush::https_post($url, $info);
                    }
                }
                sleep(1);
            }
            jsonSuccess('200','成功处理了'.$ci.'条');
        }
    }
    //手动处理
    public function bao_edit()
    {
        $id     = $this->request->post('id');
        $type   = $this->request->post('type');
        $text   = $this->request->post('text');
        $time   = time();
        //查找记录是否存在
        $res    = Db::table('user_goko')->where('user_goko_id',$id)->find();
        if(empty($res))
        {
            jsonError('10001','兑换记录不存在');
        }
        if($res['status'] != '1')
        {
            jsonError('10001','该兑换记录已被处理');
        }
        if($type == '1')
        {
            $update           = [
                'status'     => 2,
                'cont'       => '已完成',
                'chuli_time' => $time,
            ];
            $res2 = Db::table('user_goko')->where('user_goko_id',$id)->update($update);
            caozuo($res2);
        }else{
            if(empty($text))
            {
                jsonError('10001','请输入拒绝理由');
            }
            $update           = [
                'status'      => 3,
                'cont'       => $text,
                'chuli_time' => $time,
            ];
            //拒绝
            $res222 = Db::table('user_goko')->where('user_goko_id',$id)->update($update);
            if($res222)
            {
                $url = 'http://127.0.0.1:9510/system/add_gold_integral_dian';
                $desc = '置换退回';
                //增加积分
                $info = [
                    'type' => 4,    //1增加金币 2增加积分 3增加标点
                    'desc' => $desc,    //描述
                    'key'  => config('key'),    //key
                ];
                //退回beel
                $info['user_id'] = $res['user_id'];
                $info['num'] = $res['num']+$res['shouxu'];
                VyangAdminPush::https_post($url, $info);
                jsonSuccess('200','成功处理');
            }else{
                jsonSuccess('10001','处理错误');
            }
        }
    }
    //导出信息
    public function bao_export()
    {
        $arr2    = $this->request->post('arr/a');
        $where['user_goko_id'] = ['in', implode(',', $arr2)];
        $user_info = Db::table('user_goko')->where($where)->field('user_goko_id,user_id,num')->select();
        if(!empty($user_info))
        {
            $all = [];
            foreach ($user_info as $k => $v)
            {
                $account = Db::table('user')->where('user_id',$v['user_id'])->value('wkjys_account');
                $all[$k]['user_goko_id']     = $v['user_goko_id'];
                $all[$k]['name']             = htmlentities($account);
                $all[$k]['num']              = $v['num'];
            }
            if(!empty($all))
            {
                $title = [
                    '记录id',
                    '账号',
                    '数量',
                ];
                $path = '/filexlsx/data2.xlsx';
                $url = \app\common\model\Common::get_system()['url'].$path;
                wps('置换信息',$title,$all,ROOT_PATH.'/public'.$path);
            }
            $count = count($all);
            jsonSuccess('200',"成功导出{$count} 条,下载地址：<br>".$url,['url' =>$url ]);
        }else{
            jsonSuccess('10001','未能找到用户信息');
        }
        jsonSuccess('200','导出成功');
    }
}
