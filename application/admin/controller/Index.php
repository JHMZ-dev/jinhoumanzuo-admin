<?php
namespace app\admin\controller;

use app\common\model\VyangAdminPush;
use OSS\Core\OssException;
use OSS\OssClient;
use think\Db;
use think\Request;
use think\Image;
/**
 * 主页
 * Class Index
 * @package app\admin\controller
 */
class Index extends Common
{
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中
        $this->assign('active','1');
    }
    /**
     * 主页
     * @return mixed
     */
    public function index()
    {
        $day = date('Y-m-d');
        //计算今日新增用户数
        $data['one_user']       = Db::name('user')->whereTime('reg_time', 'today')->count();
        $this->xiao_redis->select(0);

        //计算总用户数
        $data['all_user']       = $this->xiao_redis->get('all_ren')?$this->xiao_redis->get('all_ren'):0;
        //计算总实名用户
        $data['real_ren']       = $this->xiao_redis->get('real_ren')?$this->xiao_redis->get('real_ren'):0;
        //计算今日实名用户
        $data['day_real_ren']       = $this->xiao_redis->get($day.'real_ren')?$this->xiao_redis->get($day.'real_ren'):0;

        $data['one_order']       = Db::name('order')->whereTime('pay_time', 'today')->sum('money');
        //计算实名用户数
        $data['all_order']       = round($this->xiao_redis->get('order_money'),2);
        $data['all_gongyi_price']       = round($this->xiao_redis->get('all_gongyi_price'),2);


        //今日接口调用次数
        $kou = $this->xiao_redis->get($day.'_jiekou');
        if(empty($kou))
        {
            $kou = 0;
        }
        $data['jiekou']   = $kou;
        //今日活跃用户
        $data['huoyue']   = $this->xiao_redis->sCard($day.'_user');
        //今日完成任务用户
        $data['huoyue_user_renwu']   = $this->xiao_redis->sCard($day.'youxiao_user');

        //昨日新增人数
        $data['tj_user_yesterday_num'] = $this->xiao_redis->get('tj_user_yesterday_num')?$this->xiao_redis->get('tj_user_yesterday_num'):0;

        //商家统计
        $data['tj_offline_all_num'] = $this->xiao_redis->get('tj_offline_all_num')?$this->xiao_redis->get('tj_offline_all_num'):0;
        $data['tj_offline_day_num'] = $this->xiao_redis->get('tj_offline_day_num')?$this->xiao_redis->get('tj_offline_day_num'):0;
        $data['tj_offline_yesterday_num'] = $this->xiao_redis->get('tj_offline_yesterday_num')?$this->xiao_redis->get('tj_offline_yesterday_num'):0;
        $data['tj_offline_yue_num'] = $this->xiao_redis->get('tj_offline_yue_num')?$this->xiao_redis->get('tj_offline_yue_num'):0;
        $data['tj_offline_yue_top_num'] = $this->xiao_redis->get('tj_offline_yue_top_num')?$this->xiao_redis->get('tj_offline_yue_top_num'):0;

        //vip统计
        $data['tj_user_vip_alipay_all_num'] = $this->xiao_redis->get('tj_user_vip_alipay_all_num')?$this->xiao_redis->get('tj_user_vip_alipay_all_num'):0;
        $data['tj_user_vip_alipay_day_num'] = $this->xiao_redis->get('tj_user_vip_alipay_day_num')?$this->xiao_redis->get('tj_user_vip_alipay_day_num'):0;
        $data['tj_user_vip_alipay_yesterday_num'] = $this->xiao_redis->get('tj_user_vip_alipay_yesterday_num')?$this->xiao_redis->get('tj_user_vip_alipay_yesterday_num'):0;
        $data['tj_user_vip_alipay_all_price'] = $this->xiao_redis->get('tj_user_vip_alipay_all_price')?$this->xiao_redis->get('tj_user_vip_alipay_all_price'):0;
        $data['tj_user_vip_alipay_day_price'] = $this->xiao_redis->get('tj_user_vip_alipay_day_price')?$this->xiao_redis->get('tj_user_vip_alipay_day_price'):0;
        $data['tj_user_vip_alipay_yesterday_price'] = $this->xiao_redis->get('tj_user_vip_alipay_yesterday_price')?$this->xiao_redis->get('tj_user_vip_alipay_yesterday_price'):0;
        $data['tj_user_vip_tz_all_num'] = $this->xiao_redis->get('tj_user_vip_tz_all_num')?$this->xiao_redis->get('tj_user_vip_tz_all_num'):0;
        $data['tj_user_vip_tz_day_num'] = $this->xiao_redis->get('tj_user_vip_tz_day_num')?$this->xiao_redis->get('tj_user_vip_tz_day_num'):0;
        $data['tj_user_vip_tz_yesterday_num'] = $this->xiao_redis->get('tj_user_vip_tz_yesterday_num')?$this->xiao_redis->get('tj_user_vip_tz_yesterday_num'):0;
        $data['tj_user_vip_tz_all_price'] = $this->xiao_redis->get('tj_user_vip_tz_all_price')?$this->xiao_redis->get('tj_user_vip_tz_all_price'):0;
        $data['tj_user_vip_tz_day_price'] = $this->xiao_redis->get('tj_user_vip_tz_day_price')?$this->xiao_redis->get('tj_user_vip_tz_day_price'):0;
        $data['tj_user_vip_tz_yesterday_price'] = $this->xiao_redis->get('tj_user_vip_tz_yesterday_price')?$this->xiao_redis->get('tj_user_vip_tz_yesterday_price'):0;

        //余额统计
        $data['tj_user_pumna_all_price'] = $this->xiao_redis->get('tj_user_pumna_all_price')?$this->xiao_redis->get('tj_user_pumna_all_price'):0;
        $data['tj_user_yingpiao_all_price'] = $this->xiao_redis->get('tj_user_yingpiao_all_price')?$this->xiao_redis->get('tj_user_yingpiao_all_price'):0;
        $data['tj_user_tz_all_price'] = $this->xiao_redis->get('tj_user_tz_all_price')?$this->xiao_redis->get('tj_user_tz_all_price'):0;

        //红包
        $data['tj_user_hongbao_tz_all_price'] = $this->xiao_redis->get('tj_user_hongbao_tz_all_price')?$this->xiao_redis->get('tj_user_hongbao_tz_all_price'):0;
        $data['tj_user_hongbao_pumna_all_price'] = $this->xiao_redis->get('tj_user_hongbao_pumna_all_price')?$this->xiao_redis->get('tj_user_hongbao_pumna_all_price'):0;
        $data['tj_user_hongbao_tz_day_price'] = $this->xiao_redis->get('tj_user_hongbao_tz_day_price')?$this->xiao_redis->get('tj_user_hongbao_tz_day_price'):0;
        $data['tj_user_hongbao_pumna_day_price'] = $this->xiao_redis->get('tj_user_hongbao_pumna_day_price')?$this->xiao_redis->get('tj_user_hongbao_pumna_day_price'):0;

        $this->assign('data',$data);
        return $this->fetch();
    }

    /**
     * 配置信息
     * @return mixed
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function set()
    {
        //加载是否选中
        $this->assign('active','2');
        // 查询数据 并且每页显示10条数据
        $title = $this->request->get('title');
        $cname = $this->request->get('cname');
        $map = [];
        $page = '';
        if(!empty($title))
        {
            $map['set_title'] = ['like', "%$title%"];
        }
        if(!empty($cname))
        {
            $map['set_cname'] = ['like', "%$cname%"];
        }
        $list = PageSeach('admin_set', $map, [], 'set_id desc', '10', false, Request::instance()->param());
        if(!empty($list))
        {
            $page = $list->render();
            $list = $list->all();
            foreach ($list as $k => $v)
            {
                $list[$k]['set_time'] = replaceTime($v['set_time']);
            }
        }
        // 把分页数据赋值给模板变量list
        $this->assign('set',$list);
        $this->assign('show',$page);
        // 渲染模板输出
        return $this->fetch();
    }

    /**
     * 添加配置页
     * @return mixed
     */
    public function set_add()
    {
        return $this->fetch();
    }

    /**
     * 处理添加配置
     */
    public function set_add_eidt()
    {
        $title  = $this->request->post('title');
        $name   = $this->request->post('name');
        $val    = $this->request->post('value');
        if(empty($title))
        {
            jsonError('10001','标题不能为空');
        }
        if(empty($name))
        {
            jsonError('10001','参数名不能为空');
        }
        $data = [
            'set_title'     => $title,
            'set_cname'     => $name,
            'set_cvalue'    => $val,
            'set_time'      => time()
        ];
        $res = Db::name('admin_set')->insert($data);
        //返回结果
        caozuo($res);
    }

    /**
     * 编辑/删除配置
     * @throws \think\Exception
     * @throws \think\exception\PDOException
     */
    public function set_edit()
    {
        $id     = $this->request->post('id');
        $type   = $this->request->post('type');
        $name   = $this->request->post('name');
        $val    = $this->request->post('val');
        if(!empty($id) && !empty($type))
        {
            if($type == 'edit')
            {
                //编辑修改
                if(!empty($name))
                {
                    $time = time();
                    switch ($name)
                    {
                        case 'title':
                            //修改标题
                            $data = [
                                'set_title'	=>	$val,
                                'set_time'  => $time
                            ];
                            break;
                        case 'cname':
                            //修改参数名
                            $data = [
                                'set_cname'	=>	$val,
                                'set_time'  => $time
                            ];
                            break;
                        case 'cvalue':
                            //修改参数值
                            $data = [
                                'set_cvalue'	=>	$val,
                                'set_time'  => $time
                            ];
                            break;
                        default:
                            jsonError('10001','类型选择错误');
                    }
                    $res = Db::name('admin_set')->where('set_id',$id)->update($data);
                }else{
                    jsonError('10001','缺少修改内容');
                }
            }else{
                //删除
                $res = Db::name('admin_set')->where('set_id',$id)->delete();
            }
            //返回结果
            caozuo($res);
        }
    }

    /**
     * 上传到本地服务器
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function upload()
    {
        $file = $this->request->file('filename');
        if(!empty($file))
        {
            $res = upload($file);
            ajaxSuccess($res['msg'],$res['status'], $res['datas']);
        }else {
            ajaxError('请从新上传','7001');
        }
    }

    /**
     * 上传到阿里云oss
     */
    public function upload_alioos()
    {
        $scr = $this->request->file('filename');
        if(!empty($scr))
        {
            $data = upload_ali($scr);
            jsonSuccess($data['status'],$data['msg'],['url' =>$data['url'] ]);
        }
    }

    /**
     * 上传到阿里云oss
     */
    public function upload_ali_ht()
    {
        $scr = $this->request->file('img');
        if(!empty($scr))
        {
            $data = upload_ali($scr);
            jsonSuccess($data['status'],$data['msg'],['url' =>$data['url'] ]);
        }
    }


    //修改个人信息页
    public function self_page()
    {
        return $this->fetch();
    }
    //处理修改个人信息
    public function self_edit()
    {
        $title  = $this->request->post('title');
        $name   = $this->request->post('name');
        $pass   = $this->request->post('pass');
        $data   = [];
        if(empty($title))
        {
            ajaxError('请输入标题');
        }
        if(empty($name))
        {
            ajaxError('请输入账号');
        }
        if(empty($pass))
        {
            ajaxError('请输入密码');
        }
        $data['title'] = $title;
        $data['username'] = $name;
        $data['password'] = password_hash($pass,PASSWORD_DEFAULT);
        $res = Db::name('admin')->where('id',$this->userInfo['id'])->update($data);
        if($res)
        {
            jsonSuccess('200','更新成功');
        }else{
            jsonError('10001','您未作任何修改');
        }
    }
    //测试
    public function test()
    {
//        $sql = 'select id from user  where length(mobile)>11';
//        $res = Db::query($sql);
//        pr($res);
//        foreach ($res as $v)
//        {
//            Db::table('user')->where(['id' =>$v['id'] ])->delete();
//            Db::table('user_auth')->where(['user_id' =>$v['id'] ])->delete();
//        }
//        处理未实名

        //查找非领商活跃用户
        $where['zipcode'] = ['>',0];
        $where['group_user_level'] = ['eq' ,0 ];
        $res = Db::table('user')->where($where)->column('id');
        pr($res);
    }
    //处理 未设置账号的用户
    public function edit_shiming()
    {
        $list = Db::table('user_wallet')->where(['wallet_status' =>2 ])->field('wallet_id,user_id')->select();
        $uid = [];
        foreach ( $list as $k => $v)
        {
            $where = [
                'user_id'   => $v['user_id'],
                'status'    => 1,
            ];
            $ravt = Db::table('user_auth')->where($where)->field('zfb,realname')->find();
            if(empty($ravt))
            {
                $uid[] = $v['user_id'];
                $wallet[] = $v['wallet_id'];
            }
        }
        if(!empty($uid))
        {
            $uid1 = @array_unique($uid);
            $uid2 = @array_merge($uid1);
            if(!empty($uid2))
            {
                //设置用户为未实名
                $where1['id'] = ['in', implode(',', $uid2)];
                $where2['user_id'] = ['in', implode(',', $uid2)];
                Db::table('user')->where($where1)->update(['auth' =>0 ]);
                Db::table('user_auth')->where($where2)->delete();
            }
        }
        if(!empty($wallet))
        {
            //设置状态为失败
            $update           = [
                'wallet_status'     => '3',
                'wallet_cont'       => '实名信息有误请重新实名,实名后自动重新发起',
                'wallet_edit_time'  => time()
            ];
            $where3['wallet_id'] = ['in', implode(',', $wallet)];
            Db::table('user_wallet')->where($where3)->update($update);
        }
        jsonSuccess('200','成功处理'.count($uid).'个用户');
    }
    /**
     * 刷号1
     */
    public function shua()
    {
        $mobile = $this->request->get('mobile','');
        $real = $this->request->get('real','');
        $line = $this->request->get('line','');
        $num = $this->request->get('num',0);
        $ren = 100;
        $data['num'] = $num;
        $data['real'] = $real;
        $data['line'] = $line;
        if(isMobile($mobile))
        {
            $userinfo = Db::name('user')->where('mobile',$mobile)->find();
        }else{
            $userinfo = Db::name('user')->where('user_id',$mobile)->find();
        }
        if(!empty($userinfo))
        {
            $pid = $userinfo['user_id'];
            $data['pid'] = '';
            //查找账号下有多少人
            $this->xiao_redis->select(6);
            $data['team'] = $this->xiao_redis->sCard($pid . '_team_user');           //团队总人数
            $data['team_real'] = $this->xiao_redis->sCard($pid . '_team_user_real');           //团队实名人数
            $this->xiao_redis->select(5);
            $data['zhi'] = $this->xiao_redis->sCard($pid.'_zhi_user');           //直推总人数
            $data['zhi_real'] = $this->xiao_redis->sCard($pid.'_zhi_user_real');           //直推实名人数
            $data['mobile'] = $mobile;
            $data['cont'] = '';
            if($num <= $ren)
            {
                for ($i = 0; $i < $num; $i++)
                {
                    $url = 'http://127.0.0.1:9510/system/shua_registration';
                    //随机生成手机号
                    $sheng = '163' . mt_rand(11111111, 99999999);
                    if($line)
                    {
                        $info = [
                            'mobile' => $sheng,
                            'parent' => $mobile,
                            'line' => 1,
                            'key'  => config('key'),    //key
                        ];
                    }else{
                        $info = [
                            'mobile' => $sheng,
                            'parent' => $mobile,
                            'key'  => config('key'),    //key
                        ];
                    }
                    $res = VyangAdminPush::https_post($url, $info);
                    if (!empty($res['code'])) {
                        $data['cont'] .= $res['msg'];
                        if ($res['code'] == 200) {
                            $uid = $res['result']['user_id'];
                            $data['cont'] .= '注册的手机号为： ' . $sheng . '  注册的id为： ' . $uid . "<br>";
                            if ($real)
                            {
                                //实名
                                $info3 = [
                                    'user_id' => $uid,
                                    'key'  => config('key'),    //key
                                ];
                                $ur3 = 'http://127.0.0.1:9510/system/auth';
                                VyangAdminPush::https_post($ur3, $info3);
                            }
                        } else {
                            $data['cont'] .= ' 注册的手机号为： ' . $sheng;
                        }
                    } else {
                        $data['cont'] .= '请求失败 请稍后再试';
                    }
                }
            }else{
                $data['cont'] = '人数不能超过： '.$ren;
            }
        }else{
            $data['pid'] = '系统没有该手机号：'.$mobile;
            $data['team'] = 0;           //团队总人数
            $data['team_real'] = 0;          //团队h4总人数
            $data['zhi'] = 0;          //团队花钱开通会员总人数
            $data['zhi_real'] = 0;
            $data['cont'] = '';
            $data['mobile'] = '';
        }
        $this->assign('data',$data);
        return $this->fetch();
    }
    /**
     * 刷号2
     */
    public function shua2()
    {
        $mobile = $this->request->get('mobile','');
        $real = $this->request->get('real',0);
        $line = $this->request->get('line',0);
        $num = $this->request->get('num',0);
        $ren = 500;
        $data['num'] = $num;
        $data['real'] = $real;
        $data['line'] = $line;
        $userinfo = Db::name('user')->where('mobile',$mobile)->find();
        if(!empty($userinfo))
        {
            $pid = $userinfo['user_id'];
            $data['pid'] = '';
            //查找账号下有多少人
            $this->xiao_redis->select(6);
            $data['team'] = $this->xiao_redis->sCard($pid . '_team_user');           //团队总人数
            $data['team_real'] = $this->xiao_redis->sCard($pid . '_team_user_real');           //团队实名人数
            $this->xiao_redis->select(5);
            $data['zhi'] = $this->xiao_redis->sCard($pid.'_zhi_user');           //直推总人数
            $data['zhi_real'] = $this->xiao_redis->sCard($pid.'_zhi_user_real');           //直推实名人数
            $data['mobile'] = $mobile;
            $data['cont'] = '';
            if($num <= $ren)
            {
                $url = 'http://127.0.0.1:9510/dalao/shua_registration22';
                $info = [
                    'mobile' => $mobile,
                    'line' => $line,
                    'auth' => $real,
                    'ren' => $num,
                    'key'  => config('key'),    //key
                ];
                $res = VyangAdminPush::https_post($url, $info);
                $ren_1 = $res['result']['ren'];
                $data['cont'] .= '成功注册：'.$ren_1;
            }else{
                $data['cont'] = '人数不能超过： '.$ren;
            }
        }else{
            $data['pid'] = '系统没有该手机号：'.$mobile;
            $data['team'] = 0;           //团队总人数
            $data['team_real'] = 0;          //团队h4总人数
            $data['zhi'] = 0;          //团队花钱开通会员总人数
            $data['zhi_real'] = 0;
            $data['cont'] = '';
            $data['mobile'] = '';
        }
        $this->assign('data',$data);
        return $this->fetch();
    }
    public function jinyan()
    {
        $type = $this->request->post('type',2);
        $user_id = $this->request->post('text',0);
        //解除禁言
        $this->xiao_redis->select(7);
        $name = 'user_'.$user_id.'_no_chat';
        $res = $this->xiao_redis->del($name);
        if($res){
            jsonError('200','操作成功');
        }else{
            jsonError('10001','该用户没有被禁言!');
        }
    }

    //七牛云上传富文本 后台
    public function upload_qiniu_ht()
    {
        $file = request()->file('upfile');
        $uploadda_oss = upload_qiniu($file);
        if($uploadda_oss['status'] == 200){
            $name = $file->getInfo('name');
            $data = array(
                'original' => $name,
                'size' => $file->getSize(),
                'state' => 'SUCCESS',
                'title' => $uploadda_oss['all']['key'],
                'type' => substr($name, strpos($name,'.')),
                'url' => $uploadda_oss['url'],
            );
            return json_encode($data);
        }else{
            return jsonError(500,$uploadda_oss['msg'],'');
        }
    }

    //七牛云上传普通文件 后台
    public function upload_qiniu_pt_ht()
    {
        $file = request()->file('img');
        $uploadda_oss = upload_qiniu($file);
        if($uploadda_oss['status'] == 200){
            return jsonSuccess(200,$uploadda_oss['msg'],$uploadda_oss['url']);
        }else{
            return jsonError(500,$uploadda_oss['msg'],'');
        }
    }

    //多图相册 七牛云
    public function shopgoods_pho_upl()
    {
        $file = request()->file();

        if(count($file) > 10){
            return jsonError(500,'图片不能超过10张','');
        }

        foreach ($file as $k => $v){
            $uploadda_oss[] = (upload_qiniu($v))['url'];
        }
        if($uploadda_oss){
            return jsonSuccess(200,'处理成功',$uploadda_oss);
        }else{
            return jsonError(500,'当前处理人数较多，请稍后再试','');
        }

    }

    //多图相册 阿里云
    public function shopgoods_pho_ali_upl()
    {
        $file = request()->file();

        if(count($file) > 10){
            return jsonError(500,'图片不能超过10张','');
        }

        foreach ($file as $k => $v){
            $uploadda_oss[] = (upload_ali($v))['url'];
        }
        if($uploadda_oss){
            return jsonSuccess(200,'处理成功',$uploadda_oss);
        }else{
            return jsonError(500,'当前处理人数较多，请稍后再试','');
        }

    }


    public function upload_aliyun_ht_fwb(){
        $file = request()->file('upfile');
        $uploadda_oss = upload_ali($file);
        if($uploadda_oss['status'] == 200){
            $name = $file->getInfo('name');
            $data = array(
                'original' => $name,
                'size' => $file->getSize(),
                'state' => 'SUCCESS',
                'title' => $uploadda_oss['all']['key'],
                'type' => substr($name, strpos($name,'.')),
                'url' => $uploadda_oss['url'],
            );
            return json_encode($data);
        }else{
            return jsonError(500,$uploadda_oss['msg'],'');
        }
    }

}
