<?php
namespace app\admin\controller;

use app\common\model\VyangAdminPush;
use think\Db;
use think\Request;
use think\Loader;

/**
 * 权限_角色管理
 * Class Admindata
 * @package app\admin\controller
 */
class Adminnode extends Common
{
    protected $pid;
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中
        $this->assign('active','22');
    }

    /**
     * 节点列表
     */
    public function adminnodeindex()
    {
        // 查询数据 并且每页显示10条数据
        $map     = [];
        $order = 'id desc';
        $map['type_id'] = ['eq', 0];
        $map['is_menu'] = ['eq', 1];

        $list = PageSeach('admin_node', $map,[], $order, '10', false, Request::instance()->param());

        if (!empty($list))
        {
            $listall = $list->all();//【重点】 将分页数据转成实际数据数组，否则不能修改
            $page = $list->render();

            $listall = _xss($listall);
        }else{
            $listall = [];
            $page = '';
        }


        // 把分页数据赋值给模板变量list
        $this->assign('user', $listall);
        $this->assign('show', $page);

        return $this->fetch();
    }

    /**
     * 节点编辑
     */
    public function adminnode_nodeedit()
    {
        $type = $this->request->get('type',0);
        $this->assign('type',$type);
        $res_all = Db::name('admin_node')->where(['id' => $type])->find();

        //查询顶级
        $dingji = Db::name('admin_node')->where(['type_id' => 0])->field('id,node_name,type_id')->select();
        $this->assign('dingji', _xss($dingji));

        $this->assign('res_all', _xss($res_all));

        return $this->fetch();
    }

    /**
     * 节点编辑提交
     */
    public function adminnode_nodeeditsub(){
        $type = $this->request->post('type',0);
        $node_name = $this->request->post('node_name','');
        $control_name = $this->request->post('control_name','');
        $action_name = $this->request->post('action_name','');
        $type_id = $this->request->post('type_id','0');
        $is_menu = $this->request->post('is_menu','0');
        $style = $this->request->post('style','');

        if($type_id == $type){
            ajaxError('上级不能是自己');
        }

        if(!in_array($is_menu,[1,0])){
            ajaxError('is_menu只能是1或者0');
        }

        if($type_id == 0){
            if($is_menu == 0 || empty($is_menu)) {
                ajaxError('顶级菜单必须是菜单项');
            }
        }

        $res = Db::name('admin_node')->where('id', $type)->update([
            'node_name' => $node_name,
            'control_name' => $control_name,
            'action_name' => $action_name,
            'type_id' => $type_id,
            'is_menu' => $is_menu,
            'style' => $style,
        ]);

        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败!');
        }        
    }

    /**
     * 节点添加
     */
    public function adminnode_nodeadd(){

        //查询顶级
        $dingji = Db::name('admin_node')->where(['type_id' => 0])->field('id,node_name')->select();
        $this->assign('dingji', _xss($dingji));

        return $this->fetch();
    }

    /**
     * 节点添加提交
     */
    public function adminnode_nodeaddsub(){

        $node_name = $this->request->post('node_name','');
        $control_name = $this->request->post('control_name','#');
        $action_name = $this->request->post('action_name','#');
        $type_id = $this->request->post('type_id','0');
        $is_menu = $this->request->post('is_menu','0');

        if(empty($node_name) || empty($control_name) || empty($action_name))
        {
            ajaxError('不能为空');
        }

        if(!in_array($is_menu,[0,1])){
            ajaxError('参数错误');
        }

        if($type_id == 0){
            if($is_menu == 0 || empty($is_menu)) {
                ajaxError('顶级菜单必须是菜单项');
            }
        }

        $res = Db::name('admin_node')->insert(['node_name' => $node_name,'control_name' => $control_name,'action_name' => $action_name,'type_id' => $type_id,'is_menu' => $is_menu]);
        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败');
        }
    }

    public function adminnode_nodedel()
    {
        $type = $this->request->post('type',0);

        //查询是否有下级
        $xiaji = Db::name('admin_node')->where(['type_id' => $type])->field('id')->select();
        if(!empty($xiaji)){
            ajaxError('存在下级不能删除');
        }

        $res = Db::name('admin_node')->where(['id' => $type])->delete();
        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败');
        }
    }

    //下级节点列表
    public function admin_node_xiaji(){

        $type = $this->request->get('type',0);

        $map     = [];
        $map['type_id']     = ['eq',$type];

        if(empty($type)){
            tanchuang('参数错误',1);
        }

        $list = PageSeach('admin_node', $map,[], 'id desc', '20', false, Request::instance()->param());
        if (!empty($list))
        {
            $listall = $list->all();//【重点】 将分页数据转成实际数据数组，否则不能修改
            $page = $list->render();
        }else{
            $listall = [];
        }

        $this->assign('show', $page);
        $this->assign('xiaji', _xss($listall));
        return $this->fetch();
    }

}
