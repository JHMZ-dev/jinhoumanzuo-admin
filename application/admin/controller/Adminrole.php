<?php
namespace app\admin\controller;

use app\common\model\VyangAdminPush;
use think\Db;
use think\Request;
use think\Loader;

/**
 * 权限_角色管理
 * Class Admindata
 * @package app\admin\controller
 */
class Adminrole extends Common
{
    protected $pid;
    /**
     * 初始加载
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    protected function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        //加载是否选中

        $this->assign('active','22');
    }

    public function adminroleindex()
    {
        // 查询数据 并且每页显示10条数据
        $map     = [];
        $order = 'id desc';

        $list = PageSeach('admin_role', $map,[], $order, '10', false, Request::instance()->param());

        if (!empty($list))
        {
            $listall = $list->all();//【重点】 将分页数据转成实际数据数组，否则不能修改
            $page = $list->render();

            $listall = _xss($listall);
        }else{
            $listall = [];
            $page = '';
        }


        // 把分页数据赋值给模板变量list
        $this->assign('user', $listall);
        $this->assign('show', $page);

        return $this->fetch();
    }

    /**
     * 编辑分配角色页面
     */
    public function adminrole_roleedit(){

        $type = $this->request->get('type',0);
        $this->assign('type',_xss($type));

        if($type == 1){
            echo '不可编辑超级管理员享受所有权限';exit;
        }

        //当前角色的权限 以,分割成数组
        $role = Db::name('admin_role')->where(['id' => $type])->find();
        $where = [
            'id' => ['in',$role['rule']],
        ];
        $res = Db::name('admin_node')->where($where)->select();
        $res_num = '';
        $res_num_arr = [];
        foreach ($res as $k => $v)
        {
            $res_num_arr[] = $v['id'];
        }
        $res_num = implode(',',$res_num_arr);

        //查询所有节点 包含二级子节点 分页
        $map     = [];
        $map['type_id'] = ['eq',0];//查询一级节点
        $map['id'] = ['notin',[2,4,5,6]];
        $list = PageSeach('admin_node', $map,[], 'id desc', '100', false, Request::instance()->param());
        if (!empty($list))
        {
            $listall = _xss($list->all());//【重点】 将分页数据转成实际数据数组，否则不能修改
            $page = $list->render();

            foreach ($listall as $k => $v){
                //查询下级
                $jiedian_erji = Db::name('admin_node')->where(['type_id' => $v['id']])->field('id,is_menu,node_name,type_id,style')->select();
                if(!empty($jiedian_erji)){
                    $listall[$k]['child'] = _xss($jiedian_erji);
                }else{
                    $listall[$k]['child'] = [];
                }
            }

        }else{
            $listall = [];
        }

        $this->assign('res_num', $res_num);
        $this->assign('show', $page);
        $this->assign('xiaji', $listall);

//        $type = $this->request->get('type');
//        $this->assign('type',_xss($type));
//
//        if($type == 1){
//            echo '不可编辑超级管理员享受所有权限';exit;
//        }
//
//        //当前角色的权限
//        $role = Db::table('ds_admin_role')->where(['id' => $type])->find();
//        $where = [
//          'id' => ['in',$role['rule']],
//          'is_menu' => ['eq',1]
//        ];
//        $res = Db::table('ds_admin_node')->where($where)->select();
//        $res_num = '';
//        $res_num_arr = [];
//        foreach ($res as $k => $v)
//        {
//            $res_num_arr[] = $v['id'];
//        }
//        $res_num = implode(',',$res_num_arr);
//
//        //所有权限
//        $res_all = Db::table('ds_admin_node')->where(['is_menu' => 1])->select();
//
//        $this->assign('res_num',_xss($res_num));
//        $this->assign('res_all',_xss($res_all));

        return $this->fetch();
    }

    /**
     * 编辑分配角色提交
     */
    public function adminrole_roleeditsub()
    {
        $type = $this->request->post('type',0);
        $check_arr = $this->request->post('check_arr','');


        if(empty($check_arr))
        {
            ajaxError('权限不能为空');
        }
        if($type == 1)
        {
            ajaxError('不可编辑超级管理员享受所有权限');
        }

        $res = Db::name('admin_role')->where('id', $type)->update(['rule' => $check_arr]);

        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败');
        }
    }

    /**
     * 角色添加
     */
    public function adminrole_roleadd(){
        return $this->fetch();
    }

    /**
     * 角色添加提交
     */
    public function adminrole_roleaddsub(){
        $role_name = $this->request->post('role_name','');
        $res = Db::name('admin_role')->insert(['role_name' => $role_name]);

        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败');
        }
    }
    /**
     * 编辑角色
     */
    public function adminrole_roleeditdata()
    {
        $type = $this->request->get('type',0);

        $res = Db::name('admin_role')->where(['id' => $type])->find();

        $this->assign('type',_xss($type));
        $this->assign('res',_xss($res));

        return $this->fetch();
    }
    /**
     * 编辑角色提交
     */
    public function adminrole_roleeditdatasub()
    {
        $type = $this->request->post('type',0);
        $role_name = $this->request->post('role_name','');
        $res = Db::name('admin_role')->where('id', $type)->update(['role_name' => $role_name]);
        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败');
        }
    }

    /**
     * 角色删除
     */
    public function adminrole_roledel()
    {
        $type = $this->request->post('type',0);

        if($type == 1){
            ajaxError('超级管理员不能删除');
        }

        $res = Db::name('admin_role')->where(['id' => $type])->delete();

        if($res)
        {
            ajaxSuccess('操作成功');
        }else{
            ajaxError('操作失败');
        }
    }

}
